<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbRCompBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="sisCVidDataSet.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="computadoraBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>150, 17</value>
  </metadata>
</root>